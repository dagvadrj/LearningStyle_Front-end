import React, { useState } from "react";
import {
  View,
  TextInput,
  StyleSheet,
  TouchableOpacity,
  Text,
  Modal,
  FlatList,
  TouchableWithoutFeedback,
  Keyboard,
} from "react-native";

const RegisterInput = ({ onRegisterChange }) => {
  const [registerData, setRegisterData] = useState({
    letter1: "–†",
    letter2: "–î",
    number: "",
  });

  const [visiblePopup, setVisiblePopup] = useState(null); // "letter1", "letter2" —ç—Å–≤—ç–ª null

  const mongolianLetters = [
    "–ê",
    "–ë",
    "–í",
    "–ì",
    "–î",
    "–ï",
    "–Å",
    "–ñ",
    "–ó",
    "–ò",
    "–ô",
    "–ö",
    "–õ",
    "–ú",
    "–ù",
    "–û",
    "”®",
    "–ü",
    "–†",
    "–°",
    "–¢",
    "–£",
    "“Æ",
    "–§",
    "–•",
    "–¶",
    "–ß",
    "–®",
    "–©",
    "–™",
    "–´",
    "–¨",
    "–≠",
    "–Æ",
    "–Ø",
  ];

  const handleSelectLetter = (letter, type) => {
    const updatedData = { ...registerData, [type]: letter };
    setRegisterData(updatedData);
    setVisiblePopup(null); // Popup —Ö–∞–∞—Ö
    updateRegisterString(updatedData);
  };

  const handleNumberChange = (text) => {
    if (/^\d*$/.test(text) && text.length <= 8) {
      const updatedData = { ...registerData, number: text };
      setRegisterData(updatedData);
      updateRegisterString(updatedData);
    }
  };

  // –ë“Ø—Ä—Ç–≥—ç–ª–∏–π–Ω —É—Ç–≥–∞ —à–∏–Ω—ç—á–ª—ç—Ö —Ñ—É–Ω–∫—Ü
  const updateRegisterString = (data) => {
    const registerString = `${data.letter1}${data.letter2}${data.number}`;
    if (data.number.length === 8) {
      console.log("–ë“Ø—Ä—Ç–≥—ç–ª–∏–π–Ω –¥—É–≥–∞–∞—Ä:", registerString);
    } // üîπ Console –¥—ç—ç—Ä —à—É—É–¥ —Ö—ç–≤–ª—ç–Ω—ç
    const isValid = data.number.length === 8; // –î—É–≥–∞–∞—Ä 8 –æ—Ä–æ–Ω—Ç–æ–π “Ø–µ–¥ –∑”©–≤ –≥—ç–∂ —Ç–æ–æ—Ü–æ—Ö
    onRegisterChange(isValid, registerString);
    if (isValid) {
      Keyboard.dismiss();
    }
  };

  // –î—ç–ª–≥—ç—Ü–∏–π–Ω –≥–∞–¥–Ω–∞ –¥–∞—Ä–∞—Ö–∞–¥ popup —Ö–∞–∞—Ö
  const dismissPopup = () => {
    setVisiblePopup(null);
    Keyboard.dismiss();
  };

  return (
    <TouchableWithoutFeedback onPress={dismissPopup}>
      <View style={styles.container}>
        <TouchableOpacity
          style={styles.letterBox}
          onPress={() => setVisiblePopup("letter1")}
        >
          <Text style={styles.letterText}>{registerData.letter1}</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={styles.letterBox}
          onPress={() => setVisiblePopup("letter2")}
        >
          <Text style={styles.letterText}>{registerData.letter2}</Text>
        </TouchableOpacity>

        <TextInput
          style={styles.inputBox}
          placeholder="–î—É–≥–∞–∞—Ä"
          value={registerData.number}
          onChangeText={handleNumberChange}
          keyboardType="numeric"
        />

        {/* Popup Modal */}
        <Modal visible={!!visiblePopup} transparent animationType="fade">
          <TouchableWithoutFeedback onPress={dismissPopup}>
            <View style={styles.modalContainer}>
              <View style={styles.popup}>
                <Text style={styles.popupTitle}>“Æ—Å—ç–≥ —Å–æ–Ω–≥–æ—Ö</Text>
                <FlatList
                  data={mongolianLetters}
                  keyExtractor={(item) => item}
                  numColumns={5}
                  renderItem={({ item }) => (
                    <TouchableOpacity
                      style={styles.popupItem}
                      onPress={() => handleSelectLetter(item, visiblePopup)}
                    >
                      <Text style={styles.popupText}>{item}</Text>
                    </TouchableOpacity>
                  )}
                />
              </View>
            </View>
          </TouchableWithoutFeedback>
        </Modal>
      </View>
    </TouchableWithoutFeedback>
  );
};
// —ç–Ω—ç–Ω–≥“Ø—ç—Ä –¥—É—É–¥–∞–∂ –∞–∂–∏–ª–ª—É—É–ª–∞—Ö
/* const isValidRegister = (register) => /^[–ê-–Ø]{2}[0-9]{8}$/.test(register);
if (!isValidRegister(register)) {
      setError("–†–µ–≥–∏—Å—Ç—Ä–∏–π–Ω –¥—É–≥–∞–∞—Ä –±—É—Ä—É—É –±–∞–π–Ω–∞!");
      setIsLoading(false);
      return;
    }
<RegisterInput
            onRegisterChange={(isValid, registerString) =>
              setRegister(registerString)
            }
          />
*/
const styles = StyleSheet.create({
  container: {
    display: "flex",
    alignItems: "center",
    flexDirection: "row",
    marginVertical: 20,
  },
  letterBox: {
    width: 50,
    height: 50,
    borderWidth: 1,
    borderColor: "#ccc",
    justifyContent: "center",
    alignItems: "center",
    borderRadius: 5,
    marginRight: 10,
  },
  letterText: {
    fontSize: 18,
  },
  inputBox: {
    flex: 1,
    height: 50,
    borderWidth: 1,
    borderColor: "#ccc",
    borderRadius: 5,
    paddingVertical: 10,
    paddingHorizontal: 10,
    fontSize: 16,
  },
  // Popup Modal Styles
  modalContainer: {
    flex: 1,
    backgroundColor: "rgba(0, 0, 0, 0.5)",
    justifyContent: "center",
    alignItems: "center",
  },
  popup: {
    backgroundColor: "#fff",
    width: 250,
    padding: 20,
    borderRadius: 10,
    alignItems: "center",
  },
  popupTitle: {
    fontSize: 18,
    fontWeight: "bold",
    marginBottom: 10,
  },
  popupItem: {
    width: 40,
    height: 40,
    justifyContent: "center",
    alignItems: "center",
    margin: 5,
    borderWidth: 1,
    borderColor: "#ccc",
    borderRadius: 5,
  },
  popupText: {
    fontSize: 16,
  },
});

export default RegisterInput;
